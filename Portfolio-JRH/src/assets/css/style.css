/* GENERAL */
/* SECTION SPACERS */
/* Header spacer - monitor */
@media (min-width: 992px) {
    .header-space-large {
        padding-top: 13rem;
    }
}

/* Header spacer - mobile */
@media (max-width: 991px) {
    .header-space-small {
        padding-top: 4rem;
        padding-bottom: 4rem;
    }
}

/* Top spacer standard - monitor */
@media (min-width: 992px) {
    .top-space-large {
        padding-top: 6rem;
    }
}

/* Top spacer standard - mobile */
@media (max-width: 991px) {
    .top-space-small {
        padding-top: 4rem;
        padding-bottom: 4rem;
    }
}

/* Bottom spacer standard - monitor */
@media (min-width: 992px) {
    .bottom-space-large {
        padding-top: 2rem;
    }
}

/* Bottom spacer standard - mobile */
@media (max-width: 991px) {
    .bottom-space-small {
        padding-top: 4rem;
        padding-bottom: 4rem;
    }
}

/* Footer spacer - monitor */
@media (min-width: 992px) {
    .footer-space-large {
        padding-top: 13rem;
    }
}

/* Footer spacer - mobile */
@media (max-width: 991px) {
    .footer-space-small {
        padding-top: 4rem;
        padding-bottom: 4rem;
    }
}

/* WELCOME */
/* Img shadow */
.shadowMe {
    box-shadow: 10px 10px 150px 10px #5c7070;
}

/* ABOUT ME */
/* About Me Button Design */
.darkAboutButton,
.lightAboutButton {
    font-size: 1.4rem;
    border-top: 2px;
    border-right: 2px;
    border-left: 2px;
    border-top-right-radius: 10px;
    border-top-left-radius: 10px;
    background-color: transparent;
    border: none;
}

.darkAboutButton.active,
.lightAboutButton.active {
    position: relative;
}

.darkAboutButton.active::before,
.lightAboutButton.active::before,
.darkAboutButton.active::after,
.lightAboutButton.active::after {
    --border-radius: 1rem;
    content: '';
    position: absolute;
    width: var(--border-radius);
    height: var(--border-radius);
    bottom: 0;
}

.darkAboutButton.active::before,
.lightAboutButton.active::before {
    left: calc(var(--border-radius) * -1);
    border-radius: 0 0 100vw 0;
}

.darkAboutButton.active::after,
.lightAboutButton.active::after {
    right: calc(var(--border-radius) * -1);
    border-radius: 0 0 0 100vw;
}

.darkComponentBackground,
.lightComponentBackground {
    border-radius: 12px;
}

/* Shadow Box */
.shadowAbout {
    box-shadow: 20px 20px 100px 5px #5c7070;
}

/* About Me - What I know */
.cardFlip {
    padding: 10px;
    margin: 10px;
    position: relative;
    transform-style: preserve-3d;
}

.front {
    backface-visibility: hidden;
    transform: translateZ(40px);
}

.back {
    padding: 10px;
    transform: rotateY(-180deg) translateZ(40px);
    position: absolute;
    backface-visibility: hidden;
    text-align: center;
    font-size: 2.0rem;
}


/* ABOUT ME - Future Plans */
/* Triangle  */


.triangle {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 550px;
    width: 450px;
}



.triangleTitle {
    text-align: center;
    font-size: 2.2rem;
}

.triangleList {
    list-style-type: none;
    padding: 30px;
    font-size: 1.6rem;
}


.triangleButtonLeft,
.triangleButtonRight {
    font-weight: 500;
    box-shadow: 10px 10px 150px 10px #5c7070;
    border: none;
    background-color: transparent;
    font-size: 1.4rem;}

.triangleButtonLeft {
    writing-mode: sideways-lr;
}

.triangleButtonRight {
    writing-mode: sideways-rl;
}

.triangleFront {
    border: 3px solid white;
    border-radius: 19px;
    background-image: linear-gradient(rgba(92, 112, 112, .9), rgba(92, 112, 112, .1));
}

.triangleSide {
    filter: blur(12px);
    border: 3px solid rgb(79, 80, 139);
    border-radius: 19px;
    background-image: linear-gradient(rgba(92, 112, 112, .9), rgba(92, 112, 112, .1));
}

.position1,
.position2,
.position3 {
    height: 500px;
    width: 400px;
    position: absolute;
    padding: 30px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* backface-visibility: hidden; */
}

:root {
    --axisDistance: 140px;
}

.position1 {
    transform: rotateY(0deg) translateZ(var(--axisDistance));
}

.position2 {
    transform: rotateY(240deg) translateZ(var(--axisDistance));
}

.position3 {
    transform: rotateY(120deg) translateZ(var(--axisDistance));
}